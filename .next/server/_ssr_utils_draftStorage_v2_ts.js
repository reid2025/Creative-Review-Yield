"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_utils_draftStorage_v2_ts";
exports.ids = ["_ssr_utils_draftStorage_v2_ts"];
exports.modules = {

/***/ "(ssr)/./utils/draftStorage.v2.ts":
/*!**********************************!*\
  !*** ./utils/draftStorage.v2.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftStorageV2: () => (/* binding */ DraftStorageV2)\n/* harmony export */ });\nclass DraftStorageV2 {\n    static{\n        this.DRAFT_PREFIX = 'single-upload-draft-';\n    }\n    static{\n        this.V2_PREFIX = 'draft-v2-';\n    }\n    static saveDraft(data) {\n        const draftId = data.draftId || this.generateDraftId();\n        const draftData = {\n            draftId,\n            creativeFilename: data.creativeFilename || 'Untitled',\n            lastSaved: new Date().toISOString(),\n            autoSaved: data.autoSaved || false,\n            formData: data.formData || {},\n            imageUrl: data.imageUrl\n        };\n        const key = `${this.V2_PREFIX}${draftId}`;\n        localStorage.setItem(key, JSON.stringify(draftData));\n        return draftId;\n    }\n    static getDraft(draftId) {\n        const key = `${this.V2_PREFIX}${draftId}`;\n        const data = localStorage.getItem(key);\n        if (data) {\n            return JSON.parse(data);\n        }\n        // Check for legacy format\n        const legacyData = this.getLegacyDraft(draftId);\n        if (legacyData) {\n            return legacyData;\n        }\n        return null;\n    }\n    static getAllDrafts() {\n        const drafts = [];\n        // Get V2 drafts\n        for(let i = 0; i < localStorage.length; i++){\n            const key = localStorage.key(i);\n            if (key?.startsWith(this.V2_PREFIX)) {\n                const data = localStorage.getItem(key);\n                if (data) {\n                    try {\n                        drafts.push(JSON.parse(data));\n                    } catch (e) {\n                        console.error('Failed to parse draft:', key, e);\n                    }\n                }\n            }\n        }\n        // Get legacy drafts\n        for(let i = 0; i < localStorage.length; i++){\n            const key = localStorage.key(i);\n            if (key?.startsWith(this.DRAFT_PREFIX) && !key.startsWith(this.V2_PREFIX)) {\n                const legacyDraft = this.getLegacyDraftByKey(key);\n                if (legacyDraft && !drafts.some((d)=>d.creativeFilename === legacyDraft.creativeFilename)) {\n                    drafts.push(legacyDraft);\n                }\n            }\n        }\n        return drafts;\n    }\n    static deleteDraft(draftId) {\n        // Try V2 format first\n        const v2Key = `${this.V2_PREFIX}${draftId}`;\n        if (localStorage.getItem(v2Key)) {\n            localStorage.removeItem(v2Key);\n            return true;\n        }\n        // Try legacy format\n        for(let i = 0; i < localStorage.length; i++){\n            const key = localStorage.key(i);\n            if (key?.startsWith(this.DRAFT_PREFIX)) {\n                const data = localStorage.getItem(key);\n                if (data) {\n                    try {\n                        const parsed = JSON.parse(data);\n                        if (parsed.creativeFilename === draftId || key === `${this.DRAFT_PREFIX}${draftId}`) {\n                            localStorage.removeItem(key);\n                            return true;\n                        }\n                    } catch (e) {\n                        // Try direct match\n                        if (key === `${this.DRAFT_PREFIX}${draftId}`) {\n                            localStorage.removeItem(key);\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    static migrateFromV1() {\n        const migrated = [];\n        for(let i = 0; i < localStorage.length; i++){\n            const key = localStorage.key(i);\n            if (key?.startsWith(this.DRAFT_PREFIX) && !key.startsWith(this.V2_PREFIX)) {\n                const data = localStorage.getItem(key);\n                if (data) {\n                    try {\n                        const parsed = JSON.parse(data);\n                        const filename = key.replace(this.DRAFT_PREFIX, '');\n                        // Create V2 draft\n                        const v2Draft = {\n                            draftId: this.generateDraftId(),\n                            creativeFilename: parsed.creativeFilename || filename,\n                            lastSaved: parsed.savedAt || new Date().toISOString(),\n                            autoSaved: parsed.autoSaved || false,\n                            formData: parsed,\n                            imageUrl: undefined // Legacy format didn't store image URLs\n                        };\n                        // Save as V2\n                        const v2Key = `${this.V2_PREFIX}${v2Draft.draftId}`;\n                        localStorage.setItem(v2Key, JSON.stringify(v2Draft));\n                        migrated.push(key);\n                    } catch (e) {\n                        console.error('Failed to migrate draft:', key, e);\n                    }\n                }\n            }\n        }\n        // Remove migrated legacy drafts\n        migrated.forEach((key)=>{\n            localStorage.removeItem(key);\n        });\n        if (migrated.length > 0) {\n            console.log(`Migrated ${migrated.length} drafts to V2 format`);\n        }\n    }\n    static getLegacyDraft(filename) {\n        const key = `${this.DRAFT_PREFIX}${filename}`;\n        const data = localStorage.getItem(key);\n        if (data) {\n            try {\n                const parsed = JSON.parse(data);\n                return {\n                    draftId: filename,\n                    creativeFilename: parsed.creativeFilename || filename,\n                    lastSaved: parsed.savedAt || new Date().toISOString(),\n                    autoSaved: parsed.autoSaved || false,\n                    formData: parsed,\n                    imageUrl: undefined\n                };\n            } catch (e) {\n                console.error('Failed to parse legacy draft:', key, e);\n            }\n        }\n        return null;\n    }\n    static getLegacyDraftByKey(key) {\n        const data = localStorage.getItem(key);\n        if (data) {\n            try {\n                const parsed = JSON.parse(data);\n                const filename = key.replace(this.DRAFT_PREFIX, '');\n                return {\n                    draftId: filename,\n                    creativeFilename: parsed.creativeFilename || filename,\n                    lastSaved: parsed.savedAt || new Date().toISOString(),\n                    autoSaved: parsed.autoSaved || false,\n                    formData: parsed,\n                    imageUrl: undefined\n                };\n            } catch (e) {\n                console.error('Failed to parse legacy draft:', key, e);\n            }\n        }\n        return null;\n    }\n    static generateDraftId() {\n        return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./utils/draftStorage.v2.ts\n");

/***/ })

};
;