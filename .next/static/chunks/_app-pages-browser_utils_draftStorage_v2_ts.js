"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_utils_draftStorage_v2_ts"],{

/***/ "(app-pages-browser)/./utils/draftStorage.v2.ts":
/*!**********************************!*\
  !*** ./utils/draftStorage.v2.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftStorageV2: () => (/* binding */ DraftStorageV2)\n/* harmony export */ });\nclass DraftStorageV2 {\n    static saveDraft(data) {\n        const draftId = data.draftId || this.generateDraftId();\n        const draftData = {\n            draftId,\n            creativeFilename: data.creativeFilename || 'Untitled',\n            lastSaved: new Date().toISOString(),\n            autoSaved: data.autoSaved || false,\n            formData: data.formData || {},\n            imageUrl: data.imageUrl\n        };\n        const key = \"\".concat(this.V2_PREFIX).concat(draftId);\n        localStorage.setItem(key, JSON.stringify(draftData));\n        return draftId;\n    }\n    static getDraft(draftId) {\n        const key = \"\".concat(this.V2_PREFIX).concat(draftId);\n        const data = localStorage.getItem(key);\n        if (data) {\n            return JSON.parse(data);\n        }\n        // Check for legacy format\n        const legacyData = this.getLegacyDraft(draftId);\n        if (legacyData) {\n            return legacyData;\n        }\n        return null;\n    }\n    static getAllDrafts() {\n        const drafts = [];\n        // Get V2 drafts\n        for(let i = 0; i < localStorage.length; i++){\n            const key = localStorage.key(i);\n            if (key === null || key === void 0 ? void 0 : key.startsWith(this.V2_PREFIX)) {\n                const data = localStorage.getItem(key);\n                if (data) {\n                    try {\n                        drafts.push(JSON.parse(data));\n                    } catch (e) {\n                        console.error('Failed to parse draft:', key, e);\n                    }\n                }\n            }\n        }\n        // Get legacy drafts\n        for(let i = 0; i < localStorage.length; i++){\n            const key = localStorage.key(i);\n            if ((key === null || key === void 0 ? void 0 : key.startsWith(this.DRAFT_PREFIX)) && !key.startsWith(this.V2_PREFIX)) {\n                const legacyDraft = this.getLegacyDraftByKey(key);\n                if (legacyDraft && !drafts.some((d)=>d.creativeFilename === legacyDraft.creativeFilename)) {\n                    drafts.push(legacyDraft);\n                }\n            }\n        }\n        return drafts;\n    }\n    static deleteDraft(draftId) {\n        // Try V2 format first\n        const v2Key = \"\".concat(this.V2_PREFIX).concat(draftId);\n        if (localStorage.getItem(v2Key)) {\n            localStorage.removeItem(v2Key);\n            return true;\n        }\n        // Try legacy format\n        for(let i = 0; i < localStorage.length; i++){\n            const key = localStorage.key(i);\n            if (key === null || key === void 0 ? void 0 : key.startsWith(this.DRAFT_PREFIX)) {\n                const data = localStorage.getItem(key);\n                if (data) {\n                    try {\n                        const parsed = JSON.parse(data);\n                        if (parsed.creativeFilename === draftId || key === \"\".concat(this.DRAFT_PREFIX).concat(draftId)) {\n                            localStorage.removeItem(key);\n                            return true;\n                        }\n                    } catch (e) {\n                        // Try direct match\n                        if (key === \"\".concat(this.DRAFT_PREFIX).concat(draftId)) {\n                            localStorage.removeItem(key);\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    static migrateFromV1() {\n        const migrated = [];\n        for(let i = 0; i < localStorage.length; i++){\n            const key = localStorage.key(i);\n            if ((key === null || key === void 0 ? void 0 : key.startsWith(this.DRAFT_PREFIX)) && !key.startsWith(this.V2_PREFIX)) {\n                const data = localStorage.getItem(key);\n                if (data) {\n                    try {\n                        const parsed = JSON.parse(data);\n                        const filename = key.replace(this.DRAFT_PREFIX, '');\n                        // Create V2 draft\n                        const v2Draft = {\n                            draftId: this.generateDraftId(),\n                            creativeFilename: parsed.creativeFilename || filename,\n                            lastSaved: parsed.savedAt || new Date().toISOString(),\n                            autoSaved: parsed.autoSaved || false,\n                            formData: parsed,\n                            imageUrl: undefined // Legacy format didn't store image URLs\n                        };\n                        // Save as V2\n                        const v2Key = \"\".concat(this.V2_PREFIX).concat(v2Draft.draftId);\n                        localStorage.setItem(v2Key, JSON.stringify(v2Draft));\n                        migrated.push(key);\n                    } catch (e) {\n                        console.error('Failed to migrate draft:', key, e);\n                    }\n                }\n            }\n        }\n        // Remove migrated legacy drafts\n        migrated.forEach((key)=>{\n            localStorage.removeItem(key);\n        });\n        if (migrated.length > 0) {\n            console.log(\"Migrated \".concat(migrated.length, \" drafts to V2 format\"));\n        }\n    }\n    static getLegacyDraft(filename) {\n        const key = \"\".concat(this.DRAFT_PREFIX).concat(filename);\n        const data = localStorage.getItem(key);\n        if (data) {\n            try {\n                const parsed = JSON.parse(data);\n                return {\n                    draftId: filename,\n                    creativeFilename: parsed.creativeFilename || filename,\n                    lastSaved: parsed.savedAt || new Date().toISOString(),\n                    autoSaved: parsed.autoSaved || false,\n                    formData: parsed,\n                    imageUrl: undefined\n                };\n            } catch (e) {\n                console.error('Failed to parse legacy draft:', key, e);\n            }\n        }\n        return null;\n    }\n    static getLegacyDraftByKey(key) {\n        const data = localStorage.getItem(key);\n        if (data) {\n            try {\n                const parsed = JSON.parse(data);\n                const filename = key.replace(this.DRAFT_PREFIX, '');\n                return {\n                    draftId: filename,\n                    creativeFilename: parsed.creativeFilename || filename,\n                    lastSaved: parsed.savedAt || new Date().toISOString(),\n                    autoSaved: parsed.autoSaved || false,\n                    formData: parsed,\n                    imageUrl: undefined\n                };\n            } catch (e) {\n                console.error('Failed to parse legacy draft:', key, e);\n            }\n        }\n        return null;\n    }\n    static generateDraftId() {\n        return \"\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n    }\n}\nDraftStorageV2.DRAFT_PREFIX = 'single-upload-draft-';\nDraftStorageV2.V2_PREFIX = 'draft-v2-';\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/draftStorage.v2.ts\n"));

/***/ })

}]);