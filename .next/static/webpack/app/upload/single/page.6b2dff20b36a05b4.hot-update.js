"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/upload/single/page",{

/***/ "(app-pages-browser)/./hooks/useFirebaseDrafts.ts":
/*!************************************!*\
  !*** ./hooks/useFirebaseDrafts.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFirebaseDrafts: () => (/* binding */ useFirebaseDrafts)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_firebase_draft_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/firebase-draft-service */ \"(app-pages-browser)/./lib/firebase-draft-service.ts\");\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n// React hook for Firebase draft management with real-time updates\n\n\n\nconst useFirebaseDrafts = function() {\n    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const { userId = 'anonymous', enableRealTime = true } = options;\n    const [drafts, setDrafts] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isOnline, setIsOnline] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(navigator.onLine);\n    const [lastSyncTime, setLastSyncTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [trackingStats, setTrackingStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        totalDrafts: 0,\n        autoSavedCount: 0,\n        manualSavedCount: 0,\n        aiPopulatedCount: 0\n    });\n    const unsubscribeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const saveTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    // Monitor online status\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useFirebaseDrafts.useEffect\": ()=>{\n            const handleOnline = {\n                \"useFirebaseDrafts.useEffect.handleOnline\": ()=>{\n                    setIsOnline(true);\n                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success('Connection restored - syncing data...');\n                    refreshDrafts();\n                }\n            }[\"useFirebaseDrafts.useEffect.handleOnline\"];\n            const handleOffline = {\n                \"useFirebaseDrafts.useEffect.handleOffline\": ()=>{\n                    setIsOnline(false);\n                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.warning('Connection lost - data will sync when reconnected');\n                }\n            }[\"useFirebaseDrafts.useEffect.handleOffline\"];\n            window.addEventListener('online', handleOnline);\n            window.addEventListener('offline', handleOffline);\n            return ({\n                \"useFirebaseDrafts.useEffect\": ()=>{\n                    window.removeEventListener('online', handleOnline);\n                    window.removeEventListener('offline', handleOffline);\n                }\n            })[\"useFirebaseDrafts.useEffect\"];\n        }\n    }[\"useFirebaseDrafts.useEffect\"], []);\n    // Calculate tracking stats when drafts change\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useFirebaseDrafts.useEffect\": ()=>{\n            const stats = {\n                totalDrafts: drafts.length,\n                autoSavedCount: drafts.filter({\n                    \"useFirebaseDrafts.useEffect\": (d)=>d.autoSaved\n                }[\"useFirebaseDrafts.useEffect\"]).length,\n                manualSavedCount: drafts.filter({\n                    \"useFirebaseDrafts.useEffect\": (d)=>!d.autoSaved\n                }[\"useFirebaseDrafts.useEffect\"]).length,\n                aiPopulatedCount: drafts.filter({\n                    \"useFirebaseDrafts.useEffect\": (d)=>d.aiPopulatedFields && d.aiPopulatedFields.length > 0\n                }[\"useFirebaseDrafts.useEffect\"]).length\n            };\n            setTrackingStats(stats);\n        }\n    }[\"useFirebaseDrafts.useEffect\"], [\n        drafts\n    ]);\n    // Set up real-time listener or fetch drafts\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useFirebaseDrafts.useEffect\": ()=>{\n            const initializeFirebase = {\n                \"useFirebaseDrafts.useEffect.initializeFirebase\": async ()=>{\n                    // Initializing Firebase connection\n                    // Test Firebase connection first\n                    const connectionSuccess = await _lib_firebase_draft_service__WEBPACK_IMPORTED_MODULE_1__.FirebaseDraftService.testConnection();\n                    if (!connectionSuccess) {\n                        setError('Firebase connection failed');\n                        setIsLoading(false);\n                        return;\n                    }\n                    if (enableRealTime && isOnline) {\n                        // Setting up real-time drafts listener\n                        const unsubscribe = _lib_firebase_draft_service__WEBPACK_IMPORTED_MODULE_1__.FirebaseDraftService.onDraftsChange(userId, {\n                            \"useFirebaseDrafts.useEffect.initializeFirebase.unsubscribe\": (updatedDrafts)=>{\n                                // Real-time update received\n                                setDrafts(updatedDrafts);\n                                setLastSyncTime(new Date());\n                                setIsLoading(false);\n                                setError(null);\n                            }\n                        }[\"useFirebaseDrafts.useEffect.initializeFirebase.unsubscribe\"]);\n                        unsubscribeRef.current = unsubscribe;\n                        return ({\n                            \"useFirebaseDrafts.useEffect.initializeFirebase\": ()=>{\n                                // Cleaning up real-time drafts listener\n                                unsubscribe();\n                            }\n                        })[\"useFirebaseDrafts.useEffect.initializeFirebase\"];\n                    } else {\n                        // Fallback to manual fetch\n                        refreshDrafts();\n                    }\n                }\n            }[\"useFirebaseDrafts.useEffect.initializeFirebase\"];\n            initializeFirebase();\n        }\n    }[\"useFirebaseDrafts.useEffect\"], [\n        userId,\n        enableRealTime,\n        isOnline\n    ]);\n    // Cleanup on unmount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useFirebaseDrafts.useEffect\": ()=>{\n            return ({\n                \"useFirebaseDrafts.useEffect\": ()=>{\n                    if (unsubscribeRef.current) {\n                        unsubscribeRef.current();\n                    }\n                    if (saveTimeoutRef.current) {\n                        clearTimeout(saveTimeoutRef.current);\n                    }\n                }\n            })[\"useFirebaseDrafts.useEffect\"];\n        }\n    }[\"useFirebaseDrafts.useEffect\"], []);\n    const refreshDrafts = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useFirebaseDrafts.useCallback[refreshDrafts]\": async ()=>{\n            if (!isOnline) {\n                setError('Cannot refresh drafts - you are offline');\n                return;\n            }\n            try {\n                setIsLoading(true);\n                setError(null);\n                const updatedDrafts = await _lib_firebase_draft_service__WEBPACK_IMPORTED_MODULE_1__.FirebaseDraftService.getAllDrafts(userId);\n                setDrafts(updatedDrafts);\n                setLastSyncTime(new Date());\n            // Manual refresh completed\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : 'Failed to load drafts';\n                setError(errorMessage);\n                console.error('Failed to refresh drafts:', err);\n            } finally{\n                setIsLoading(false);\n            }\n        }\n    }[\"useFirebaseDrafts.useCallback[refreshDrafts]\"], [\n        userId,\n        isOnline\n    ]);\n    const saveDraft = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useFirebaseDrafts.useCallback[saveDraft]\": async (data, imageFile)=>{\n            if (!isOnline) {\n                // Cannot save draft - offline\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Cannot save draft - you are offline');\n                return null;\n            }\n            try {\n                // Starting save draft process\n                // Add user ID to draft data\n                const draftData = {\n                    ...data,\n                    userId\n                };\n                const draftId = await _lib_firebase_draft_service__WEBPACK_IMPORTED_MODULE_1__.FirebaseDraftService.saveDraft(draftData, imageFile);\n                // Draft saved successfully\n                // Show success toast\n                const isUpdate = Boolean(data.id);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success(isUpdate ? 'Draft updated successfully' : 'Draft saved successfully');\n                return draftId;\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : 'Failed to save draft';\n                console.error('❌ Hook: Save draft failed:', err);\n                setError(errorMessage);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to save draft: \".concat(errorMessage));\n                return null;\n            }\n        }\n    }[\"useFirebaseDrafts.useCallback[saveDraft]\"], [\n        userId,\n        isOnline\n    ]);\n    const deleteDraft = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useFirebaseDrafts.useCallback[deleteDraft]\": async (id)=>{\n            if (!isOnline) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Cannot delete draft - you are offline');\n                return false;\n            }\n            try {\n                // Deleting draft\n                const success = await _lib_firebase_draft_service__WEBPACK_IMPORTED_MODULE_1__.FirebaseDraftService.deleteDraft(id);\n                if (success) {\n                    // Draft deleted successfully\n                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success('Draft deleted successfully');\n                    return true;\n                } else {\n                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Failed to delete draft');\n                    return false;\n                }\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : 'Failed to delete draft';\n                setError(errorMessage);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to delete draft: \".concat(errorMessage));\n                console.error('Failed to delete draft:', err);\n                return false;\n            }\n        }\n    }[\"useFirebaseDrafts.useCallback[deleteDraft]\"], [\n        isOnline\n    ]);\n    const getDraft = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useFirebaseDrafts.useCallback[getDraft]\": async (id)=>{\n            if (!isOnline) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Cannot load draft - you are offline');\n                return null;\n            }\n            try {\n                // Loading draft\n                const draft = await _lib_firebase_draft_service__WEBPACK_IMPORTED_MODULE_1__.FirebaseDraftService.getDraft(id);\n                if (draft) {\n                // Draft loaded successfully\n                } else {\n                // Draft not found\n                }\n                return draft;\n            } catch (err) {\n                const errorMessage = err instanceof Error ? err.message : 'Failed to load draft';\n                setError(errorMessage);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to load draft: \".concat(errorMessage));\n                console.error('Failed to load draft:', err);\n                return null;\n            }\n        }\n    }[\"useFirebaseDrafts.useCallback[getDraft]\"], [\n        isOnline\n    ]);\n    // Auto-save functionality with debounce\n    const autoSave = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useFirebaseDrafts.useCallback[autoSave]\": (data, imageFile)=>{\n            if (saveTimeoutRef.current) {\n                clearTimeout(saveTimeoutRef.current);\n            }\n            saveTimeoutRef.current = setTimeout({\n                \"useFirebaseDrafts.useCallback[autoSave]\": async ()=>{\n                    // Auto-save triggered\n                    await saveDraft({\n                        ...data,\n                        autoSaved: true\n                    }, imageFile);\n                }\n            }[\"useFirebaseDrafts.useCallback[autoSave]\"], 2000) // 2 second debounce\n            ;\n        }\n    }[\"useFirebaseDrafts.useCallback[autoSave]\"], [\n        saveDraft\n    ]);\n    return {\n        drafts,\n        isLoading,\n        error,\n        saveDraft,\n        deleteDraft,\n        getDraft,\n        refreshDrafts,\n        trackingStats,\n        isOnline,\n        lastSyncTime\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useFirebaseDrafts.ts\n"));

/***/ })

});